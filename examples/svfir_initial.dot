digraph "SVFIR" {
	label="SVFIR";

	Node0x561de5362be0 [shape=record,shape=box,label="{ConstantNullPtrValVar ID: 0\n ptr null \{ constant data \}}"];
	Node0x561de5362be0 -> Node0x561de53639b0[color=black];
	Node0x561de5362be0 -> Node0x561de53779b0[color=grey];
	Node0x561de5362be0 -> Node0x561de5332260[color=grey];
	Node0x561de5362be0 -> Node0x561de53783f0[color=grey];
	Node0x561de5362be0 -> Node0x561de5321040[color=grey];
	Node0x561de5362be0 -> Node0x561de5326570[color=grey];
	Node0x561de5362be0 -> Node0x561de53724d0[color=grey];
	Node0x561de5362be0 -> Node0x561de53756f0[color=grey];
	Node0x561de5362be0 -> Node0x561de5362460[color=grey];
	Node0x561de53639b0 [shape=record,shape=diamond,label="{DummyValVar ID: 1}"];
	Node0x561de53563d0 [shape=record,shape=box3d,label="{DummyObjVar ID: 3}"];
	Node0x561de53563d0 -> Node0x561de5374340[color=green];
	Node0x561de53563d0 -> Node0x561de5379790[color=green];
	Node0x561de53563d0 -> Node0x561de5363720[color=green];
	Node0x561de53563d0 -> Node0x561de535d530[color=green];
	Node0x561de53563d0 -> Node0x561de53626f0[color=green];
	Node0x561de53563d0 -> Node0x561de535d400[color=green];
	Node0x561de5374340 [shape=record,shape=box,label="{GlobalValVar ID: 4\n @.str = private unnamed_addr constant [10 x i8] c\"input.txt\\00\", align 1 \{ Glob  \}}"];
	Node0x561de5379790 [shape=record,shape=box,label="{GlobalValVar ID: 5\n @.str.1 = private unnamed_addr constant [2 x i8] c\"r\\00\", align 1 \{ Glob  \}}"];
	Node0x561de5363720 [shape=record,shape=box,label="{GlobalValVar ID: 6\n @.str.2 = private unnamed_addr constant [26 x i8] c\"Error opening input file\\0A\\00\", align 1 \{ Glob  \}}"];
	Node0x561de535d530 [shape=record,shape=box,label="{GlobalValVar ID: 7\n @.str.3 = private unnamed_addr constant [11 x i8] c\"output.txt\\00\", align 1 \{ Glob  \}}"];
	Node0x561de53626f0 [shape=record,shape=box,label="{GlobalValVar ID: 8\n @.str.4 = private unnamed_addr constant [2 x i8] c\"w\\00\", align 1 \{ Glob  \}}"];
	Node0x561de535d400 [shape=record,shape=box,label="{GlobalValVar ID: 9\n @.str.5 = private unnamed_addr constant [27 x i8] c\"Error opening output file\\0A\\00\", align 1 \{ Glob  \}}"];
	Node0x561de5379b40 [shape=record,shape=box,label="{FunValVar ID: 10\nmain}"];
	Node0x561de5366150 [shape=record,shape=box3d,label="{FunObjVar ID: 11 (base object)\nmain}"];
	Node0x561de5366150 -> Node0x561de5379b40[color=green];
	Node0x561de5391820 [shape=record,shape=box,label="{[main] RetPN ID: 12 unique return node for function main}"];
	Node0x561de5316c30 [shape=record,shape=box,label="{[main] ValVar ID: 13\n   %buffer = alloca [1024 x i8], align 16 }"];
	Node0x561de5316c30 -> Node0x561de5378560[color=purple];
	Node0x561de5316c30 -> Node0x561de532a150[color=purple];
	Node0x561de5375a90 [shape=record,shape=box3d,label="{[main] StackObjVar ID: 14\n   %buffer = alloca [1024 x i8], align 16 }"];
	Node0x561de5375a90 -> Node0x561de5316c30[color=green];
	Node0x561de537f440 [shape=record,shape=box,label="{[main] ValVar ID: 16\n   %buffer2 = alloca [1024 x i8], align 16 }"];
	Node0x561de537f440 -> Node0x561de5355bc0[color=purple];
	Node0x561de537f440 -> Node0x561de5375580[color=purple];
	Node0x561de537f0a0 [shape=record,shape=box3d,label="{[main] StackObjVar ID: 17\n   %buffer2 = alloca [1024 x i8], align 16 }"];
	Node0x561de537f0a0 -> Node0x561de537f440[color=green];
	Node0x561de531d550 [shape=record,shape=box,label="{[main] ValVar ID: 18\n   %call = call noalias ptr @fopen(ptr noundef @.str, ptr noundef @.str.1) }"];
	Node0x561de531d550 -> Node0x561de537f570[color=grey];
	Node0x561de5375880 [shape=record,shape=box3d,label="{[main] HeapObjVar ID: 19\n   %call = call noalias ptr @fopen(ptr noundef @.str, ptr noundef @.str.1) }"];
	Node0x561de5375880 -> Node0x561de531d550[color=green];
	Node0x561de53a4800 [shape=record,shape=box,label="{FunValVar ID: 20\nfopen}"];
	Node0x561de5366340 [shape=record,shape=box3d,label="{FunObjVar ID: 21 (base object)\nfopen}"];
	Node0x561de5366340 -> Node0x561de53a4800[color=green];
	Node0x561de537f570 [shape=record,shape=box,label="{[main] ValVar ID: 22\n   %cmp = icmp eq ptr %call, null }"];
	Node0x561de537f570 -> Node0x561de5377840[color=grey];
	Node0x561de5377840 [shape=record,shape=box,label="{[main] ValVar ID: 23\n   br i1 %cmp, label %if.then, label %if.end }"];
	Node0x561de537cc50 [shape=record,shape=box,label="{FunValVar ID: 25\nprintf}"];
	Node0x561de53641b0 [shape=record,shape=box3d,label="{FunObjVar ID: 26 (base object)\nprintf}"];
	Node0x561de53641b0 -> Node0x561de537cc50[color=green];
	Node0x561de53779b0 [shape=record,shape=box,label="{[main] ValVar ID: 27\n   br label %return }"];
	Node0x561de53172e0 [shape=record,shape=box,label="{[main] ValVar ID: 29\n   %call2 = call noalias ptr @fopen(ptr noundef @.str.3, ptr noundef @.str.4) }"];
	Node0x561de53172e0 -> Node0x561de5329b50[color=grey];
	Node0x561de5372190 [shape=record,shape=box3d,label="{[main] HeapObjVar ID: 30\n   %call2 = call noalias ptr @fopen(ptr noundef @.str.3, ptr noundef @.str.4) }"];
	Node0x561de5372190 -> Node0x561de53172e0[color=green];
	Node0x561de5329b50 [shape=record,shape=box,label="{[main] ValVar ID: 31\n   %cmp3 = icmp eq ptr %call2, null }"];
	Node0x561de5329b50 -> Node0x561de5316ac0[color=grey];
	Node0x561de5316ac0 [shape=record,shape=box,label="{[main] ValVar ID: 32\n   br i1 %cmp3, label %if.then4, label %if.end7 }"];
	Node0x561de537cdd0 [shape=record,shape=box,label="{FunValVar ID: 35\nfclose}"];
	Node0x561de53643a0 [shape=record,shape=box3d,label="{FunObjVar ID: 36 (base object)\nfclose}"];
	Node0x561de53643a0 -> Node0x561de537cdd0[color=green];
	Node0x561de5332260 [shape=record,shape=box,label="{[main] ValVar ID: 37\n   br label %return }"];
	Node0x561de53783f0 [shape=record,shape=box,label="{[main] ValVar ID: 38\n   br label %while.cond }"];
	Node0x561de5378560 [shape=record,shape=box,label="{[main] ValVar ID: 40\n   %arraydecay = getelementptr inbounds [1024 x i8], ptr %buffer, i64 0, i64 0 }"];
	Node0x561de53a15d0 [shape=record,shape=box,label="{[main] ValVar ID: 42\n   %call8 = call i64 @fread(ptr noundef %arraydecay, i64 noundef 1, i64 noundef 1024, ptr noundef %call) }"];
	Node0x561de53a15d0 -> Node0x561de5374870[color=grey];
	Node0x561de5371fa0 [shape=record,shape=box,label="{FunValVar ID: 45\nfread}"];
	Node0x561de5323ee0 [shape=record,shape=box3d,label="{FunObjVar ID: 46 (base object)\nfread}"];
	Node0x561de5323ee0 -> Node0x561de5371fa0[color=green];
	Node0x561de5374870 [shape=record,shape=box,label="{[main] ValVar ID: 47\n   %cmp9 = icmp ugt i64 %call8, 0 }"];
	Node0x561de5374870 -> Node0x561de53749e0[color=grey];
	Node0x561de53749e0 [shape=record,shape=box,label="{[main] ValVar ID: 48\n   br i1 %cmp9, label %while.body, label %while.end }"];
	Node0x561de5321040 [shape=record,shape=box,label="{[main] ValVar ID: 49\n   br label %for.cond }"];
	Node0x561de53211b0 [shape=record,shape=box,label="{[main] ValVar ID: 51\n   %i.0 = phi i64 [ 0, %while.body ], [ %inc, %for.inc ] }"];
	Node0x561de53211b0 -> Node0x561de5340510[color=grey];
	Node0x561de53211b0 -> Node0x561de5372360[color=grey];
	Node0x561de5372360 [shape=record,shape=box,label="{[main] ValVar ID: 52\n   %inc = add i64 %i.0, 1 }"];
	Node0x561de5340510 [shape=record,shape=box,label="{[main] ValVar ID: 53\n   %cmp10 = icmp ult i64 %i.0, %call8 }"];
	Node0x561de5340510 -> Node0x561de537a530[color=grey];
	Node0x561de537a530 [shape=record,shape=box,label="{[main] ValVar ID: 54\n   br i1 %cmp10, label %for.body, label %for.end }"];
	Node0x561de532a150 [shape=record,shape=box,label="{[main] ValVar ID: 55\n   %arrayidx = getelementptr inbounds [1024 x i8], ptr %buffer, i64 0, i64 %i.0 }"];
	Node0x561de532a150 -> Node0x561de5355eb0[color=red];
	Node0x561de5355eb0 [shape=record,shape=box,label="{[main] ValVar ID: 56\n   %0 = load i8, ptr %arrayidx, align 1 }"];
	Node0x561de5355eb0 -> Node0x561de5355d30[color=black];
	Node0x561de5355d30 [shape=record,shape=box,label="{[main] ValVar ID: 57\n   %conv = sext i8 %0 to i32 }"];
	Node0x561de5355d30 -> Node0x561de537c110[color=grey];
	Node0x561de537c110 [shape=record,shape=box,label="{[main] ValVar ID: 58\n   %add = add nsw i32 %conv, 1 }"];
	Node0x561de537c110 -> Node0x561de537c280[color=black];
	Node0x561de537c280 [shape=record,shape=box,label="{[main] ValVar ID: 59\n   %conv11 = trunc i32 %add to i8 }"];
	Node0x561de537c280 -> Node0x561de5355bc0[color=blue];
	Node0x561de5355bc0 [shape=record,shape=box,label="{[main] ValVar ID: 60\n   %arrayidx12 = getelementptr inbounds [1024 x i8], ptr %buffer2, i64 0, i64 %i.0 }"];
	Node0x561de5326570 [shape=record,shape=box,label="{[main] ValVar ID: 62\n   br label %for.inc }"];
	Node0x561de53724d0 [shape=record,shape=box,label="{[main] ValVar ID: 64\n   br label %for.cond, !llvm.loop !6 }"];
	Node0x561de5375580 [shape=record,shape=box,label="{[main] ValVar ID: 65\n   %arraydecay13 = getelementptr inbounds [1024 x i8], ptr %buffer2, i64 0, i64 0 }"];
	Node0x561de53a1450 [shape=record,shape=box,label="{FunValVar ID: 67\nfwrite}"];
	Node0x561de537f2b0 [shape=record,shape=box3d,label="{FunObjVar ID: 68 (base object)\nfwrite}"];
	Node0x561de537f2b0 -> Node0x561de53a1450[color=green];
	Node0x561de53756f0 [shape=record,shape=box,label="{[main] ValVar ID: 69\n   br label %while.cond, !llvm.loop !8 }"];
	Node0x561de5362460 [shape=record,shape=box,label="{[main] ValVar ID: 72\n   br label %return }"];
	Node0x561de53291c0 [shape=record,shape=box,label="{[main] ValVar ID: 73\n   %retval.0 = phi i32 [ 1, %if.then ], [ 1, %if.then4 ], [ 0, %while.end ] }"];
	Node0x561de53291c0 -> Node0x561de5391820[color=grey];
}
