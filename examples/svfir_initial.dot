digraph "SVFIR" {
	label="SVFIR";

	Node0x558380722c90 [shape=record,shape=box,label="{ConstantNullPtrValVar ID: 0\n ptr null \{ constant data \}}"];
	Node0x558380722c90 -> Node0x55838070c6c0[color=black];
	Node0x558380722c90 -> Node0x5583806a3d00[color=grey];
	Node0x558380722c90 -> Node0x5583806d0c70[color=grey];
	Node0x55838070c6c0 [shape=record,shape=diamond,label="{DummyValVar ID: 1}"];
	Node0x55838070d4f0 [shape=record,shape=box3d,label="{DummyObjVar ID: 3}"];
	Node0x55838070d4f0 -> Node0x5583806ae480[color=green];
	Node0x5583806ae480 [shape=record,shape=box,label="{GlobalValVar ID: 4\n @.str = private unnamed_addr constant [9 x i8] c\"a and b\\0A\\00\", align 1 \{ Glob  \}}"];
	Node0x5583806b8c80 [shape=record,shape=box,label="{FunValVar ID: 5\nmain}"];
	Node0x5583806cab10 [shape=record,shape=box3d,label="{FunObjVar ID: 6 (base object)\nmain}"];
	Node0x5583806cab10 -> Node0x5583806b8c80[color=green];
	Node0x5583806cd340 [shape=record,shape=box,label="{[main] RetPN ID: 7 unique return node for function main}"];
	Node0x5583806c9e60 [shape=record,shape=box,label="{[main] ArgValVar ID: 8\n i32 %argc \{ 0th arg main  \}}"];
	Node0x5583806c9e60 -> Node0x558380722720[color=blue];
	Node0x558380722720 [shape=record,shape=box,label="{[main] ValVar ID: 10\n   %argc.addr = alloca i32, align 4 }"];
	Node0x558380722720 -> Node0x5583806a3720[color=red];
	Node0x558380722720 -> Node0x5583806c14b0[color=purple];
	Node0x5583806f1d50 [shape=record,shape=box3d,label="{[main] StackObjVar ID: 11\n   %argc.addr = alloca i32, align 4 }"];
	Node0x5583806f1d50 -> Node0x558380722720[color=green];
	Node0x5583806ca770 [shape=record,shape=box,label="{[main] ValVar ID: 13\n   %b = alloca i32, align 4 }"];
	Node0x5583806ca770 -> Node0x5583806ae020[color=red];
	Node0x5583806ca770 -> Node0x5583806caf80[color=purple];
	Node0x5583806c1ed0 [shape=record,shape=box3d,label="{[main] StackObjVar ID: 14\n   %b = alloca i32, align 4 }"];
	Node0x5583806c1ed0 -> Node0x5583806ca770[color=green];
	Node0x5583806a3720 [shape=record,shape=box,label="{[main] ValVar ID: 16\n   %0 = load i32, ptr %argc.addr, align 4 }"];
	Node0x5583806a3720 -> Node0x5583806a3320[color=grey];
	Node0x5583806c0d60 [shape=record,shape=box,label="{FunValVar ID: 20\nllvm.memcpy.p0.p0.i64}"];
	Node0x5583806ca980 [shape=record,shape=box3d,label="{FunObjVar ID: 21 (base object)\nllvm.memcpy.p0.p0.i64}"];
	Node0x5583806ca980 -> Node0x5583806c0d60[color=green];
	Node0x5583806a3320 [shape=record,shape=box,label="{[main] ValVar ID: 22\n   %tobool = icmp ne i32 %0, 0 }"];
	Node0x5583806a3320 -> Node0x5583806ca200[color=grey];
	Node0x5583806ca200 [shape=record,shape=box,label="{[main] ValVar ID: 24\n   br i1 %tobool, label %if.then, label %if.end3 }"];
	Node0x5583806ae020 [shape=record,shape=box,label="{[main] ValVar ID: 25\n   %1 = load i32, ptr %b, align 4 }"];
	Node0x5583806ae020 -> Node0x5583806ec560[color=grey];
	Node0x5583806ec560 [shape=record,shape=box,label="{[main] ValVar ID: 26\n   %tobool1 = icmp ne i32 %1, 0 }"];
	Node0x5583806ec560 -> Node0x5583806f1590[color=grey];
	Node0x5583806f1590 [shape=record,shape=box,label="{[main] ValVar ID: 27\n   br i1 %tobool1, label %if.then2, label %if.end }"];
	Node0x5583806ecfa0 [shape=record,shape=box,label="{FunValVar ID: 29\nprintf}"];
	Node0x55838072eb20 [shape=record,shape=box3d,label="{FunObjVar ID: 30 (base object)\nprintf}"];
	Node0x55838072eb20 -> Node0x5583806ecfa0[color=green];
	Node0x5583806a3d00 [shape=record,shape=box,label="{[main] ValVar ID: 31\n   br label %if.end }"];
	Node0x5583806d0c70 [shape=record,shape=box,label="{[main] ValVar ID: 33\n   br label %if.end3 }"];
	Node0x5583806caf80 [shape=record,shape=hexagon,label="{[main] GepValVar ID: 44 with offset_0\n   %b = alloca i32, align 4 }"];
	Node0x5583806c14b0 [shape=record,shape=hexagon,label="{[main] GepValVar ID: 45 with offset_0\n   %argc.addr = alloca i32, align 4 }"];
	Node0x5583806c14b0 -> Node0x5583806b4a10[color=red];
	Node0x5583806b4a10 [shape=record,shape=diamond,label="{DummyValVar ID: 46}"];
	Node0x5583806b4a10 -> Node0x5583806caf80[color=blue];
}
